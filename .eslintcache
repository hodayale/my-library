[{"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\index.js":"1","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\App.js":"2","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\reportWebVitals.js":"3","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\AddBookPage.js":"4","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\BookDetailsPage.js":"5","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\MyLibraryNavbar.js":"6","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\HomePage.js":"7","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\BooksPage.js":"8","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\SinupPage.js":"9","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\BookCard.js":"10","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\Checkboxes.js":"11","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\LoginPage.js":"12","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\LiveSearchBox.js":"13"},{"size":550,"mtime":1611475875590,"results":"14","hashOfConfig":"15"},{"size":11869,"mtime":1612093261360,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":10537,"mtime":1612102734433,"results":"18","hashOfConfig":"15"},{"size":3705,"mtime":1612092635830,"results":"19","hashOfConfig":"15"},{"size":3383,"mtime":1612095904672,"results":"20","hashOfConfig":"15"},{"size":4998,"mtime":1612121680279,"results":"21","hashOfConfig":"15"},{"size":5291,"mtime":1612093190157,"results":"22","hashOfConfig":"15"},{"size":4449,"mtime":1611842214159,"results":"23","hashOfConfig":"15"},{"size":2741,"mtime":1612092569224,"results":"24","hashOfConfig":"15"},{"size":4527,"mtime":1611841071036,"results":"25","hashOfConfig":"15"},{"size":3282,"mtime":1612093195279,"results":"26","hashOfConfig":"15"},{"size":1169,"mtime":1612077799459,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4qw6i5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\index.js",[],["58","59"],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\App.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport MyLibraryNavbar from './components/MyLibraryNavbar';\nimport AddBookPage from './pages/AddBookPage';\nimport BookDetailsPage from './pages/BookDetailsPage';\nimport BooksPage from './pages/BooksPage';\nimport HomePage from './pages/HomePage';\nimport logo from './icons/love-book.svg';\nimport React from 'react';\nimport usersJSON from './data/users.json';\nimport booksJSON from './data/books.json';\nimport booksLoanedJSON from './data/booksLoaned.json';\nimport booksOwnedJSON from './data/booksOwned.json';\nimport booksReadJSON from './data/booksRead.json';\nimport booksWantToOwnJSON from './data/booksWantToOwn.json';\nimport booksWantToReadJSON from './data/booksWantToRead.json';\n\nfunction App() {\n  const [activeUser, setactiveUser] = React.useState(null);\n  \n  const [results, setResults] = React.useState([]);\n\n  // All Books state\n  //***********************************************\n  let books;\n  if(localStorage.getItem('booksJSON')) {\n    books = JSON.parse(localStorage.getItem('booksJSON'));\n  }else {\n    books = booksJSON;\n  }\n\n  const [allBooks, setallBooks] = React.useState(books);\n\n  // Books Loaned state\n  //***********************************************\n  let booksLoaned;\n  if(localStorage.getItem('booksLoanedJSON')) {\n    booksLoaned = JSON.parse(localStorage.getItem('booksLoanedJSON'));\n  }else {\n    booksLoaned = booksLoanedJSON;\n  }\n\n  const [allBooksLoaned, setallBooksLoaned] = React.useState(booksLoaned);\n\n  // Books Owned state\n  //***********************************************\n  let booksOwned;\n  if(localStorage.getItem('booksOwnedJSON')) {\n    booksOwned = JSON.parse(localStorage.getItem('booksOwnedJSON'));\n  }else {\n    booksOwned = booksOwnedJSON;\n  }\n\n  const [allBooksOwned, setallBooksOwned] = React.useState(booksOwned);\n\n  // Books Read state\n  //***********************************************\n  let booksRead;\n  if(localStorage.getItem('booksReadJSON')) {\n    booksRead = JSON.parse(localStorage.getItem('booksReadJSON'));\n  }else {\n    booksRead = booksReadJSON;\n  }\n\n  const [allBooksRead, setallBooksRead] = React.useState(booksRead);\n\n  // Books WantToOwn state\n  //***********************************************\n  let booksWantToOwn;\n  if(localStorage.getItem('booksWantToOwnJSON')) {\n    booksWantToOwn = JSON.parse(localStorage.getItem('booksWantToOwnJSON'));\n  }else {\n    booksWantToOwn = booksWantToOwnJSON;\n  }\n\n  const [allBooksWantToOwn, setallBooksWantToOwn] = React.useState(booksWantToOwn);\n\n  // Books WantToRead state\n  //***********************************************\n  let booksWantToRead;\n  if(localStorage.getItem('booksWantToReadJSON')) {\n    booksWantToRead = JSON.parse(localStorage.getItem('booksWantToReadJSON'));\n  }else {\n    booksWantToRead = booksWantToReadJSON;\n  }\n\n  const [allBooksWantToRead, setallBooksWantToRead] = React.useState(booksWantToRead);\n\n  let users;\n  if(localStorage.getItem('usersJSON')) {\n    users = JSON.parse(localStorage.getItem('usersJSON'));\n  }else {\n    users = usersJSON;\n  }\n\n  const [allUsers, setallUsers] = React.useState(users);\n  \n  const handleLogin = (userObj) => {\n    setactiveUser(userObj);\n  }\n\n  const handleLogout = () => {\n    setactiveUser(null);\n  }\n\n  const addBook = (bookObj) => {\n    setallBooks(allBooks.concat(bookObj));\n    localStorage.setItem('booksJSON', JSON.stringify(allBooks.concat(bookObj)));\n  } \n\n  const updateBook = (bookObj) => {\n    let objIndex = allBooks.findIndex((obj => obj.id == bookObj.id));\n    if(objIndex !== -1){\n      let books = [...allBooks];  //shallow copy of allBooks\n      books[objIndex] = bookObj;\n      setallBooks(books);\n      localStorage.setItem('booksJSON', JSON.stringify(books));\n    }\n  }\n\n  const addUser = (userObj) => {\n    setallUsers(allUsers.concat(userObj));\n    localStorage.setItem('usersJSON', JSON.stringify(allUsers.concat(userObj)));\n  }\n\n  const addBookOwned = (bookOwnObj) => {\n    let objIndex = allBooksOwned.findIndex((obj => (obj.bookId == bookOwnObj.bookId && obj.userId == bookOwnObj.userId)));\n    if(objIndex === -1){\n      setallBooksOwned(allBooksOwned.concat(bookOwnObj));\n      localStorage.setItem('booksOwnedJSON', JSON.stringify(allBooksOwned.concat(bookOwnObj)));\n    }\n  }\n\n  const removeBookOwned = (bookOwnObj) => {\n    let objIndex = allBooksOwned.findIndex((obj => (obj.bookId == bookOwnObj.bookId && obj.userId == bookOwnObj.userId)));\n    if(objIndex !== -1){\n      let booksOwned = [...allBooksOwned];  //shallow copy\n      booksOwned.splice(objIndex, 1);\n      setallBooksOwned(booksOwned);\n      localStorage.setItem('booksOwnedJSON', JSON.stringify(booksOwned));\n    }\n  }\n\n  const addBookRead = (bookReadObj) => {\n    let objIndex = allBooksRead.findIndex((obj => (obj.bookId == bookReadObj.bookId && obj.userId == bookReadObj.userId)));\n    if(objIndex === -1){\n      setallBooksRead(allBooksRead.concat(bookReadObj));\n      localStorage.setItem('booksReadJSON', JSON.stringify(allBooksRead.concat(bookReadObj)));\n    }\n  }\n\n  const removeBookRead = (bookReadObj) => {\n    let objIndex = allBooksRead.findIndex((obj => (obj.bookId == bookReadObj.bookId && obj.userId == bookReadObj.userId)));\n    if(objIndex !== -1){\n      let booksRead = [...allBooksRead];  //shallow copy\n      booksRead.splice(objIndex, 1);\n      setallBooksRead(booksRead);\n      localStorage.setItem('booksReadJSON', JSON.stringify(booksRead));\n    }\n  }\n\n  const addBookWantToRead = (bookReadObj) => {\n    let objIndex = allBooksWantToRead.findIndex((obj => (obj.bookId == bookReadObj.bookId && obj.userId == bookReadObj.userId)));\n    if(objIndex === -1){\n      setallBooksWantToRead(allBooksWantToRead.concat(bookReadObj));\n      localStorage.setItem('booksWantToReadJSON', JSON.stringify(allBooksWantToRead.concat(bookReadObj)));\n    }\n  }\n\n  const removeBookWantToRead = (bookWWantToReadObj) => {\n    let objIndex = allBooksWantToRead.findIndex((obj => (obj.bookId == bookWWantToReadObj.bookId && obj.userId == bookWWantToReadObj.userId)));\n    if(objIndex !== -1){\n      let booksWantToRead = [...allBooksWantToRead];  //shallow copy\n      booksWantToRead.splice(objIndex, 1);\n      setallBooksWantToRead(booksWantToRead);\n      localStorage.setItem('booksWantToReadJSON', JSON.stringify(booksWantToRead));\n    }\n  }\n\n  const addBookWantToOwn = (bookOwnObj) => {\n    let objIndex = allBooksWantToOwn.findIndex((obj => (obj.bookId == bookOwnObj.bookId && obj.userId == bookOwnObj.userId)));\n    if(objIndex === -1){\n      \n      setallBooksWantToOwn(allBooksWantToOwn.concat(bookOwnObj));\n      localStorage.setItem('booksWantToOwnJSON', JSON.stringify(allBooksWantToOwn.concat(bookOwnObj)));\n    }\n  }\n\n  const removeBookWantToOwn = (bookOwnObj) => {\n    let objIndex = allBooksWantToOwn.findIndex((obj => (obj.bookId == bookOwnObj.bookId && obj.userId == bookOwnObj.userId)));\n    if(objIndex !== -1){\n      let booksWantToOwn = [...allBooksWantToOwn];  //shallow copy\n      booksWantToOwn.splice(objIndex, 1);\n      setallBooksWantToOwn(booksWantToOwn);\n      localStorage.setItem('booksWantToOwnJSON', JSON.stringify(booksWantToOwn));\n    }\n  }\n\n  const addBookLoaned = (bookLoanObj) => {\n    let objIndex = allBooksLoaned.findIndex((obj => (obj.bookId == bookLoanObj.bookId && obj.userId == bookLoanObj.userId)));\n    if(objIndex === -1){\n      setallBooksLoaned(allBooksLoaned.concat(bookLoanObj));\n      localStorage.setItem('booksLoanedJSON', JSON.stringify(allBooksLoaned.concat(bookLoanObj)));\n    }\n  }\n\n  const removeBookLoaned = (bookLoanObj) => {\n    let objIndex = allBooksLoaned.findIndex((obj => (obj.bookId == bookLoanObj.bookId && obj.userId == bookLoanObj.userId)));\n    if(objIndex !== -1){\n      let booksLoaned = [...allBooksLoaned];  //shallow copy\n      booksLoaned.splice(objIndex, 1);\n      setallBooksLoaned(booksLoaned);\n      localStorage.setItem('booksLoanedJSON', JSON.stringify(booksLoaned));\n    }\n  }\n\n  const updateBookLoaned = (bookLoanObj) => {\n    let objIndex = allBooksLoaned.findIndex((obj => (obj.bookId == bookLoanObj.bookId && obj.userId == bookLoanObj.userId)));\n    if(objIndex === -1){\n      addBookLoaned(bookLoanObj)\n    } else {\n      let booksLoaned = [...allBooksLoaned];  //shallow copy\n      booksLoaned[objIndex] = bookLoanObj;\n      setallBooksLoaned(booksLoaned);\n      localStorage.setItem('booksLoanedJSON', JSON.stringify(booksLoaned));\n    }\n  }\n\n  const searchBook = (searchText) => {\n    if(!searchText) {\n        setResults([]);\n        return;\n    }\n    const booksFound = allBooks.filter(book => book.bookName.includes(searchText)/* || book.auther.includes(searchText)*/)\n                              .map((item) => {return {name: item.bookName, id: item.id}});\n    setResults(booksFound);\n  }\n\n  const showSearchResults = (index) => {\n      const book = results[index];\n      window.location = `#/books/${book.id}`;\n      setResults([]);\n  }\n\n  return (\n    <HashRouter >\n      <Route exact path={[\"/\", \"/books\", \"/addBook\", \"/books/:bookId\"]}>\n            <MyLibraryNavbar logo={logo} activeUser={activeUser} handleLogout={handleLogout} users={allUsers} \n                              handleLogin={handleLogin} addUser={addUser}\n                              results={results} searchBook={searchBook} showSearchResults={showSearchResults}/>\n      </Route>\n      <Route exact path=\"/\">\n            <HomePage activeUser={activeUser} books={allBooks}\n                      booksOwned={allBooksOwned} booksRead={allBooksRead} booksWantToRead={allBooksWantToRead} \n                      booksWantToOwn={allBooksWantToOwn} booksLoaned={allBooksLoaned}\n                      addBookOwned={addBookOwned} removeBookOwned={removeBookOwned}\n                      addBookRead={addBookRead} removeBookRead={removeBookRead}\n                      addBookWantToRead={addBookWantToRead} removeBookWantToRead={removeBookWantToRead}\n                      addBookWantToOwn={addBookWantToOwn} removeBookWantToOwn={removeBookWantToOwn}\n                      removeBookLoaned={removeBookLoaned} updateBookLoaned={updateBookLoaned}/>\n        </Route>\n        <Route exact path=\"/books\">\n            <BooksPage activeUser={activeUser} books={allBooks}\n                        booksOwned={allBooksOwned} booksRead={allBooksRead} booksWantToRead={allBooksWantToRead} \n                        booksWantToOwn={allBooksWantToOwn} booksLoaned={allBooksLoaned}\n                        addBookOwned={addBookOwned} removeBookOwned={removeBookOwned}\n                        addBookRead={addBookRead} removeBookRead={removeBookRead}\n                        addBookWantToRead={addBookWantToRead} removeBookWantToRead={removeBookWantToRead}\n                        addBookWantToOwn={addBookWantToOwn} removeBookWantToOwn={removeBookWantToOwn}\n                        removeBookLoaned={removeBookLoaned} updateBookLoaned={updateBookLoaned}/>\n        </Route>\n        <Route exact path=\"/books/:bookId\">\n            <BookDetailsPage activeUser={activeUser} books={allBooks} booksOwned={allBooksOwned} booksRead={allBooksRead} booksWantToRead={allBooksWantToRead} \n                             booksWantToOwn={allBooksWantToOwn} booksLoaned={allBooksLoaned}\n                             addBookOwned={addBookOwned} removeBookOwned={removeBookOwned}\n                             addBookRead={addBookRead} removeBookRead={removeBookRead}\n                             addBookWantToRead={addBookWantToRead} removeBookWantToRead={removeBookWantToRead}\n                             addBookWantToOwn={addBookWantToOwn} removeBookWantToOwn={removeBookWantToOwn}\n                             removeBookLoaned={removeBookLoaned} updateBookLoaned={updateBookLoaned}/>\n        </Route>\n        <Route exact path=\"/addBook\">\n            <AddBookPage activeUser={activeUser} books={allBooks} addBook={addBook}/>\n        </Route>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\reportWebVitals.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\AddBookPage.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\BookDetailsPage.js",["84","85","86","87","88","89","90"],"import { Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport Checkboxes from \"../components/Checkboxes\";\r\n\r\nconst BookDetailsPage = (props) => {\r\n    const {activeUser, books, booksOwned, booksRead, booksWantToRead, booksWantToOwn, \r\n            booksLoaned, addBookOwned, removeBookOwned, addBookRead, removeBookRead,\r\n            addBookWantToRead, removeBookWantToRead, addBookWantToOwn, removeBookWantToOwn,\r\n            removeBookLoaned, updateBookLoaned} = props;\r\n    const {bookId} = useParams();\r\n\r\n    //get book details by ID\r\n    const selectedBook = books.find((item) => {return item.id == bookId});\r\n\r\n    let checkboxs = \"\";\r\n    if(activeUser){\r\n        //get if book Owned\r\n        const bookOwned = booksOwned.filter(item => (item.userId === activeUser.id && item.bookId == bookId)).length > 0;\r\n        //get if book read\r\n        const bookRead = booksRead.filter(item => (item.userId === activeUser.id && item.bookId == bookId)).length > 0;\r\n        //get if book want to own\r\n        const bookWantToOwn = booksWantToOwn.filter(item => (item.userId === activeUser.id && item.bookId == bookId)).length > 0;\r\n        //get if book want to read\r\n        const bookWantToRead = booksWantToRead.filter(item => (item.userId === activeUser.id && item.bookId == bookId)).length > 0;\r\n        //get if book loaned\r\n        const bookLoaned = booksLoaned.filter(item => (item.userId === activeUser.id && item.bookId == bookId)).length > 0;\r\n\r\n        const bookLoanerName = bookLoaned ? booksLoaned.find(item => {return (item.userId === activeUser.id && item.bookId == bookId)}).nameOfLoaner : \"\";\r\n\r\n        checkboxs = <Checkboxes bookId={bookId} userId={activeUser.id}\r\n                                    bookOwned={bookOwned} bookRead={bookRead} bookWantToRead={bookWantToRead} \r\n                                    bookWantToOwn={bookWantToOwn} bookLoaned={bookLoaned} bookLoanerName={bookLoanerName} showLoaned={true}\r\n                                    addBookOwned={addBookOwned} removeBookOwned={removeBookOwned}\r\n                                    addBookRead={addBookRead} removeBookRead={removeBookRead}\r\n                                    addBookWantToRead={addBookWantToRead} removeBookWantToRead={removeBookWantToRead}\r\n                                    addBookWantToOwn={addBookWantToOwn} removeBookWantToOwn={removeBookWantToOwn}\r\n                                    removeBookLoaned={removeBookLoaned} updateBookLoaned={updateBookLoaned}/> ;\r\n    }\r\n    \r\n\r\n    return(\r\n        <Container>\r\n            \r\n            <Row className=\"mt-4\">\r\n            <Col sm={3}>\r\n                    <Image  style={{ width: '18rem'}} src={selectedBook.bookCover} rounded/>\r\n                    {activeUser ? checkboxs : ''}\r\n                </Col>\r\n                <Col sm={9}>\r\n                    <h1 className=\"name-of-book-design\">{selectedBook.bookName}</h1>\r\n                    <h4>{selectedBook.auther}</h4>\r\n                    <p><span style={{fontWeight: \"bold\"}}>שם ההוצאה: </span>{selectedBook.publisher}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>תאריך ההוצאה: </span>{selectedBook.publishDate}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>קטגוריה: </span>{selectedBook.category}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>מס' עמודים: </span>{selectedBook.numPages}</p>\r\n                    <h4>תקציר</h4>\r\n                    <p>{selectedBook.summery}</p>\r\n                </Col>\r\n                \r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default BookDetailsPage;","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\MyLibraryNavbar.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\HomePage.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\BooksPage.js",["91"],"import { Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport BookCard from \"../components/BookCard\";\r\n\r\nclass BooksPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: 'owned',\r\n            currentBooks: this.props.booksOwned\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleChangeActive(this.props.booksOwned, 'owned');\r\n    }\r\n\r\n    handleChangeActive = (bookArr, activeStr) => {\r\n        if(this.props.activeUser) {\r\n            this.setState({\r\n                active: activeStr,\r\n                currentBooks: bookArr\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.activeUser) {\r\n            return <Redirect push to='/'/>;\r\n        }  \r\n        \r\n        const allBooks = this.state.currentBooks.filter(b => this.props.activeUser.id === b.userId);\r\n        const bookCards = allBooks.map((b) => {\r\n                    const book = this.props.books.filter(book => book.id == b.bookId);\r\n                    if (book.length > 0) {\r\n                        //get if book Owned\r\n                        const bookOwned = this.props.booksOwned.filter(item => (item.userId === this.props.activeUser.id && item.bookId === book[0].id)).length > 0;\r\n                        //get if book read\r\n                        const bookRead = this.props.booksRead.filter(item => (item.userId === this.props.activeUser.id && item.bookId === book[0].id)).length > 0;\r\n                        //get if book want to own\r\n                        const bookWantToOwn = this.props.booksWantToOwn.filter(item => (item.userId === this.props.activeUser.id && item.bookId === book[0].id)).length > 0;\r\n                        //get if book want to read\r\n                        const bookWantToRead = this.props.booksWantToRead.filter(item => (item.userId === this.props.activeUser.id && item.bookId === book[0].id)).length > 0;\r\n                        //get if book loaned\r\n                        const bookLoaned = this.props.booksLoaned.filter(item => (item.userId === this.props.activeUser.id && item.bookId === book[0].id)).length > 0;\r\n                        return <BookCard key={book[0].id} activeUser={this.props.activeUser} bookId={book[0].id} \r\n                                bookName={book[0].bookName} bookAuther={book[0].auther} bookPicture={book[0].bookCover}\r\n                                bookOwned={bookOwned} bookRead={bookRead} bookWantToRead={bookWantToRead} bookWantToOwn={bookWantToOwn}\r\n                                bookLoaned={bookLoaned}\r\n                                addBookOwned={this.props.addBookOwned} removeBookOwned={this.props.removeBookOwned}\r\n                                addBookRead={this.props.addBookRead} removeBookRead={this.props.removeBookRead}\r\n                                addBookWantToRead={this.props.addBookWantToRead} removeBookWantToRead={this.props.removeBookWantToRead}\r\n                                addBookWantToOwn={this.props.addBookWantToOwn} removeBookWantToOwn={this.props.removeBookWantToOwn}\r\n                                removeBookLoaned={this.props.removeBookLoaned} updateBookLoaned={this.props.updateBookLoaned}/>\r\n                    }\r\n                    return \"\";\r\n            });\r\n\r\n        return(\r\n            <Row className=\"mt-4\">\r\n                <Col sm={2} >\r\n                    <ListGroup className=\"list-grout-design\">\r\n                        <ListGroup.Item className={this.state.active === 'owned' ? \"active\" : \"\"}\r\n                                        action onClick={() => this.handleChangeActive(this.props.booksOwned, 'owned')}\r\n                                        variant=\"danger\">ספרים שברשותי</ListGroup.Item>\r\n                        <ListGroup.Item className={this.state.active === 'read' ? \"active\" : \"\"}\r\n                                        action onClick={() => this.handleChangeActive(this.props.booksRead, 'read')} variant=\"danger\">ספרים שקראתי</ListGroup.Item>\r\n                        <ListGroup.Item className={this.state.active === 'wantToRead' ? \"active\" : \"\"}\r\n                                        action onClick={() => this.handleChangeActive(this.props.booksWantToRead, 'wantToRead')} variant=\"danger\">ספרים שברצוני לקרוא</ListGroup.Item>\r\n                        <ListGroup.Item className={this.state.active === 'wantToOwn' ? \"active\" : \"\"}\r\n                                        action onClick={() => this.handleChangeActive(this.props.booksWantToOwn, 'wantToOwn')} variant=\"danger\">ספרים שברצוני לרכוש</ListGroup.Item>\r\n                        <ListGroup.Item className={this.state.active === 'loaned' ? \"active\" : \"\"}\r\n                                        action onClick={() => this.handleChangeActive(this.props.booksLoaned, 'loaned')} variant=\"danger\">ספרים שהשאלתי</ListGroup.Item>\r\n                    </ListGroup>\r\n                    </Col>\r\n                <Col sm={10}>\r\n                    <Row className=\"justify-content-even\">\r\n                        {bookCards}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BooksPage;","C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\SinupPage.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\BookCard.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\Checkboxes.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\pages\\LoginPage.js",[],"C:\\Users\\hoday\\OneDrive\\מסמכים\\קורס פיתוח WEB\\Final Project\\my-library\\src\\components\\LiveSearchBox.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":111,"column":9,"nodeType":"98","messageId":"99","endLine":111,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":112,"column":54,"nodeType":"102","messageId":"103","endLine":112,"endColumn":56},{"ruleId":"100","severity":1,"message":"101","line":127,"column":64,"nodeType":"102","messageId":"103","endLine":127,"endColumn":66},{"ruleId":"100","severity":1,"message":"101","line":127,"column":99,"nodeType":"102","messageId":"103","endLine":127,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":135,"column":64,"nodeType":"102","messageId":"103","endLine":135,"endColumn":66},{"ruleId":"100","severity":1,"message":"101","line":135,"column":99,"nodeType":"102","messageId":"103","endLine":135,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":145,"column":63,"nodeType":"102","messageId":"103","endLine":145,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":145,"column":99,"nodeType":"102","messageId":"103","endLine":145,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":153,"column":63,"nodeType":"102","messageId":"103","endLine":153,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":153,"column":99,"nodeType":"102","messageId":"103","endLine":153,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":163,"column":69,"nodeType":"102","messageId":"103","endLine":163,"endColumn":71},{"ruleId":"100","severity":1,"message":"101","line":163,"column":105,"nodeType":"102","messageId":"103","endLine":163,"endColumn":107},{"ruleId":"100","severity":1,"message":"101","line":171,"column":69,"nodeType":"102","messageId":"103","endLine":171,"endColumn":71},{"ruleId":"100","severity":1,"message":"101","line":171,"column":112,"nodeType":"102","messageId":"103","endLine":171,"endColumn":114},{"ruleId":"100","severity":1,"message":"101","line":181,"column":68,"nodeType":"102","messageId":"103","endLine":181,"endColumn":70},{"ruleId":"100","severity":1,"message":"101","line":181,"column":103,"nodeType":"102","messageId":"103","endLine":181,"endColumn":105},{"ruleId":"100","severity":1,"message":"101","line":190,"column":68,"nodeType":"102","messageId":"103","endLine":190,"endColumn":70},{"ruleId":"100","severity":1,"message":"101","line":190,"column":103,"nodeType":"102","messageId":"103","endLine":190,"endColumn":105},{"ruleId":"100","severity":1,"message":"101","line":200,"column":65,"nodeType":"102","messageId":"103","endLine":200,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":200,"column":101,"nodeType":"102","messageId":"103","endLine":200,"endColumn":103},{"ruleId":"100","severity":1,"message":"101","line":208,"column":65,"nodeType":"102","messageId":"103","endLine":208,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":208,"column":101,"nodeType":"102","messageId":"103","endLine":208,"endColumn":103},{"ruleId":"100","severity":1,"message":"101","line":218,"column":65,"nodeType":"102","messageId":"103","endLine":218,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":218,"column":101,"nodeType":"102","messageId":"103","endLine":218,"endColumn":103},{"ruleId":"100","severity":1,"message":"101","line":14,"column":63,"nodeType":"102","messageId":"103","endLine":14,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":19,"column":99,"nodeType":"102","messageId":"103","endLine":19,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":21,"column":97,"nodeType":"102","messageId":"103","endLine":21,"endColumn":99},{"ruleId":"100","severity":1,"message":"101","line":23,"column":107,"nodeType":"102","messageId":"103","endLine":23,"endColumn":109},{"ruleId":"100","severity":1,"message":"101","line":25,"column":109,"nodeType":"102","messageId":"103","endLine":25,"endColumn":111},{"ruleId":"100","severity":1,"message":"101","line":27,"column":101,"nodeType":"102","messageId":"103","endLine":27,"endColumn":103},{"ruleId":"100","severity":1,"message":"101","line":29,"column":124,"nodeType":"102","messageId":"103","endLine":29,"endColumn":126},{"ruleId":"100","severity":1,"message":"101","line":36,"column":74,"nodeType":"102","messageId":"103","endLine":36,"endColumn":76},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'updateBook' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]